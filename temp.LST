C51 COMPILER V9.59.0.0   TEMP                                                              06/17/2020 20:15:35 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN temp.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE temp.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include"temp.h"
   2          /*******************************************************************************
   3          * 函数名         : Delay1ms
   4          * 函数功能       : 延时函数
   5          * 输入           : 无
   6          * 输出           : 无
   7          *******************************************************************************/
   8          
   9          void Delay1ms(unsigned int y)
  10          {
  11   1        unsigned int x;
  12   1        for(y;y>0;y--)
  13   1          for(x=110;x>0;x--);
  14   1      }
  15          /*******************************************************************************
  16          * 函数名         : Ds18b20Init
  17          * 函数功能       : 初始化
  18          * 输入           : 无
  19          * 输出           : 初始化成功返回1，失败返回0
  20          *******************************************************************************/
  21          
  22          unsigned char Ds18b20Init()
  23          {
  24   1        unsigned int i;
  25   1        DSPORT=0;      //将总线拉低480us~960us
  26   1        i=70; 
  27   1        while(i--);//延时642us
  28   1        DSPORT=1;     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  29   1        i=0;
  30   1        while(DSPORT) //等待DS18B20拉低总线
  31   1        {
  32   2          i++;
  33   2          if(i>5000)//等待>5MS
  34   2            return 0;//初始化失败 
  35   2        }
  36   1        return 1;//初始化成功
  37   1      }
  38          
  39          /*******************************************************************************
  40          * 函数名         : Ds18b20WriteByte
  41          * 函数功能       : 向18B20写入一个字节
  42          * 输入           : com
  43          * 输出           : 无
  44          *******************************************************************************/
  45          
  46          void Ds18b20WriteByte(unsigned char dat)
  47          {
  48   1        unsigned int i,j;
  49   1        for(j=0;j<8;j++)
  50   1        {
  51   2          DSPORT=0;     //每写入一位数据之前先把总线拉低1us
  52   2          i++;
  53   2          DSPORT=dat&0x01; //然后写入一个数据，从最低位开始
  54   2          i=6;
  55   2          while(i--); //延时68us，持续时间最少60us
C51 COMPILER V9.59.0.0   TEMP                                                              06/17/2020 20:15:35 PAGE 2   

  56   2          DSPORT=1; //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  57   2          dat>>=1;
  58   2        }
  59   1      }
  60          /*******************************************************************************
  61          * 函数名         : Ds18b20ReadByte
  62          * 函数功能       : 读取一个字节
  63          * 输入           : com
  64          * 输出           : 无
  65          *******************************************************************************/
  66          
  67          
  68          unsigned char Ds18b20ReadByte()
  69          {
  70   1        unsigned char byte,bi;
  71   1        unsigned int i,j; 
  72   1        for(j=8;j>0;j--)
  73   1        {
  74   2          DSPORT=0;//先将总线拉低1us
  75   2          i++;
  76   2          DSPORT=1;//然后释放总线
  77   2          i++;
  78   2          i++;//延时6us等待数据稳定
  79   2          bi=DSPORT;   //读取数据，从最低位开始读取
  80   2          /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  81   2          byte=(byte>>1)|(bi<<7);             
  82   2          i=4;    //读取完之后等待48us再接着读取下一个数
  83   2          while(i--);
  84   2        }       
  85   1        return byte;
  86   1      }
  87          /*******************************************************************************
  88          * 函数名         : Ds18b20ChangTemp
  89          * 函数功能       : 让18b20开始转换温度
  90          * 输入           : com
  91          * 输出           : 无
  92          *******************************************************************************/
  93          
  94          void  Ds18b20ChangTemp()
  95          {
  96   1        Ds18b20Init();
  97   1        Delay1ms(1);
  98   1        Ds18b20WriteByte(0xcc);   //跳过ROM操作命令    
  99   1        Ds18b20WriteByte(0x44);     //温度转换命令
 100   1      //  Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
 101   1         
 102   1      }
 103          /*******************************************************************************
 104          * 函数名         : Ds18b20ReadTempCom
 105          * 函数功能       : 发送读取温度命令
 106          * 输入           : com
 107          * 输出           : 无
 108          *******************************************************************************/
 109          
 110          void  Ds18b20ReadTempCom()
 111          { 
 112   1      
 113   1        Ds18b20Init();
 114   1        Delay1ms(1);
 115   1        Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 116   1        Ds18b20WriteByte(0xbe);  //发送读取温度命令
 117   1      }
C51 COMPILER V9.59.0.0   TEMP                                                              06/17/2020 20:15:35 PAGE 3   

 118          /*******************************************************************************
 119          * 函数名         : Ds18b20ReadTemp
 120          * 函数功能       : 读取温度
 121          * 输入           : com
 122          * 输出           : 无
 123          *******************************************************************************/
 124          
 125          int Ds18b20ReadTemp()
 126          {
 127   1        int temp=0;
 128   1        unsigned char tmh,tml;
 129   1        Ds18b20ChangTemp();       //先写入转换命令
 130   1        Ds18b20ReadTempCom();     //然后等待转换完后发送读取温度命令
 131   1        tml=Ds18b20ReadByte();    //读取温度值共16位，先读低字节
 132   1        tmh=Ds18b20ReadByte();    //再读高字节
 133   1        temp=tmh;
 134   1        temp<<=8;
 135   1        temp|=tml;
 136   1        return temp;
 137   1      }
 138          
 139          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
